js the language 

 
1) js the basic
 20 days ma bnai gy thy jo ka branden eich na bnayi thy jo ka bani yeh 20 din ma thy is ka ma 
bht se features miss aur bht se bug ha jis ka oper aj b ak community work kar rahy ha jis 
ko ecmaScript kehty ha 
js = language ha 
managed by ecmaScript
new feature 

js ma mainly 2 version ha 
es5,es6 

inbuilt feature 
console.log
alert()
prompt()
etc yeh  sab js ka inbuilt feature ha jo js ka part ni ha yeh technically hamry browser ma pehly se add hoty ha 
jis ko ham js ki help se use kar sakty ha 


2) variables and constant

  jab b ap prograaming ka use karty ho to ap ko data se deal karna parta ha to is ka matlab 
  jab b ham koi b programming lang use karty ha data se to deal kary ga hi 
  to is ka lia sab se pehly data ko create kary ga phir data ko ham technically save b kary ga aur ak unique name dey
  ga ham apny data ko taky in future jab b hamy apny data ki need ho to unique name ko call kar ka ham apny data
  ko use kar saky 
  to ja data ham js ma create kary ga technically wo data hamry browser ki heap memory ma save ho ga aur 
  hamara browser technicaly hamry ram pa depended ho ga
  to asa keh sakty ha ka jo js ma data ham save karty technically wo hamry pc ki ram ma save hota ha 

  aur rahy batt variable and const kii 
  es6 ma  
  let,const aya ha 
  to ham let,const ka use hi kary ga 
  to jo variable hoty ha ham un ki value ki change kar sakty ha 
  aur const ka to matlab hi const hota ha jis ki kabi b value change ni ho sakty 

  3) compiler and interprator

js english language samjhty ha aur computers english ni smjhty  ap ka computer 0 and 1 jisko 
  current flow and current bypass bhi keh sakty ha, computers jo ha wo to eng lang smjhy ga ni 
  to in ka mid ma ak for example translater lgya jata ha jo ka js lang ko convert kar ka machine code ma convert
  karta ha jis sa hamara computer smjhh sakta ha ka ham kya output derahy ha via prograamming 

  ab yeh jo translater hoty ha un ma 2 ha ak ko 
  compiler kehty ha 
  interprator kehty ha 
  compiler ap ka code ko 

asa smjho ap ka code jab compiler hota ha to 1sec ka time leta ha 
aur machine code ma jaldi run kar deta ha 

aur interprator 
asa smjho ka ap ka code interprator ma run hota ha jo ka 
compiler se kam time leta ha conversion hony ma 
bytcode ma ap ka code jata ha phir byteCode machineCode ke through 
change hoti ha jis ko ap ka machine smjh saky
to is yeh pata chala ka jo runing process ha wo interprator ziyada
time leta ha compiler to direct machineCode ma convert ho jata 


to itna smjho
ka jo hamara browser ha wo 
jit compiler use karty ha 
jit  = just in time => matalb conversion ka lia interprator jesa
aur code runing ma comiler jesa 



functions 
es5 ) function statement , function expression ,anonymous function
function abcd(){
fuction statement 

}

var abcd = function (){
  fuction expression
}
fuction(){
anonymous function 

}

es6 ) basic fat arrow function , fat arrow with one param , fat arrow with implicit return
()=>{
  basic fat arrow func
}

const abcd = a => { 
  fat arrow with one parameter 
}


fat arrow with implicit return

Key Points:
Implicit return works only if there's a single expression.
Curly braces {} disable implicit return; you'll need to use return explicitly in that case.
To return objects implicitly, wrap them in parentheses ().

Syntax of Fat Arrow with Implicit Return
If your function body has a single expression, you can omit both:

{} (curly braces)
return keyword
The value of that single expression is returned automatically.

javascript
Copy code
const add = (a, b) => a + b;
In the example above:

The function takes two arguments (a and b).
The single expression a + b is implicitly returned.
Example Comparison:
With Explicit Return:
javascript
Copy code
const multiply = (a, b) => {
  return a * b; // Explicit return
};
console.log(multiply(3, 4)); // Output: 12
With Implicit Return:
javascript
Copy code
const multiply = (a, b) => a * b; // Implicit return
console.log(multiply(3, 4)); // Output: 12



parameter and argument in func

jab b ap ak fun bnaty ho i.e abcd() => yeh (name) yeh jo ha is ma technically ak variable de sakty ho ap jis ko ap 
parameter kehty ho 
aur jab func ap call karty hoto koi asy value jo ap na apny function ko assign karni ho usko abcd('hashir') =>
yeh ap ka argument ho ga

const  abcd =(name)=>{ name apka variable ha  jis ma wo value save ho gi jo apna func call karty hoa di thy
return console.log(name) => output hashir
}

abcd('hashir')

return 
return ka matlab hua , jha par bhi return lagy ga uske age jo bhi likhoga wo jayegi jha par func 
call hua tha , return func ka andar lagta ha 

// aisa func jo kch return ni karta wo bhi undefined krata hai 